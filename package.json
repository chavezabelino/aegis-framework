{
  "name": "aegis-framework",
  "version": "2.4.0",
  "description": "The world's first GenAI Operating System - Constitutional governance for AI-native engineering with systematic drift detection, evolution learning, and democratic amendment processes",
  "type": "module",
  "scripts": {
    "validate": "bun tools/validate-constitution.ts",
    "validate:templates": "node tools/validate-template-quality.cjs",
    "validate:fidelity": "node tools/validate-output-fidelity.cjs",
    "validate:versions": "node tools/validate-version-consistency.cjs",
    "validate:all": "bun run validate && bun run validate:templates && bun run validate:fidelity && bun run validate:versions && bun run validate:package-manager",
    "conductor": "bun cli/aegis-conductor.ts",
    "check": "bun cli/aegis-conductor.ts check",
    "init": "bun cli/aegis-conductor.ts init",
    "docs": "bun cli/aegis-docs.ts",
    "docs:manifesto": "bun cli/aegis-docs.ts manifesto",
    "docs:principles": "bun cli/aegis-docs.ts principles",
    "docs:search": "bun cli/aegis-docs.ts search",
    "analyze-patterns": "bun framework/learning/pattern-recognition-engine.ts",
    "learn": "bun run analyze-patterns",
    "predict": "bun framework/learning/predictive-enforcement.ts",
    "changelog": "bun framework/learning/intelligent-changelog.ts",
    "changelog-analyze": "bun framework/learning/intelligent-changelog.ts",
    "changelog-update": "bun tools/auto-update-changelog.ts",
    "version-plan": "bun run changelog",
    "amendment": "bun cli/amendment-cli.ts",
    "democracy": "bun framework/governance/democratic-amendment-engine.ts",
    "governance": "bun run amendment",
    "heal": "bun framework/healing/self-healing-blueprint-engine.ts",
    "observe": "bun framework/observability/advanced-observability-engine.ts",
    "cross-learn": "bun framework/learning/cross-framework-learning-system.ts",
    "detect-evolution": "bun cli/detect-evolution-stories.cjs",
    "evolution-story": "bun cli/generate-evolution-story.cjs",
    "analyze-copilot": "bun -e \"require('./tools/copilot-integration.ts').analyzeCopilotInteractions(1)\"",
    "pre-commit-check": "bun cli/detect-evolution-stories.cjs",
    "dev-scan": "watch \"bun run detect-evolution\" docs/ framework/ tools/ --interval=30",
    "setup-proactive": "bash tools/setup-proactive-detection.sh",
    "build": "bun run validate:all && bun run build:vite",
    "build:vite": "vite build --config vite.cli.config.ts",
    "build:esm": "vite build --config vite.cli.config.ts",
    "dev": "vite",
    "preview": "vite preview",
    "type-check": "tsc --noEmit",
    "cursor:start": "bun run cli/cursor-realtime-cli.ts start",
    "cursor:stop": "bun run cli/cursor-realtime-cli.ts stop",
    "cursor:status": "bun run cli/cursor-realtime-cli.ts status",
    "cursor:monitor": "bun run cli/cursor-realtime-cli.ts monitor",
    "cursor:stats": "bun run cli/cursor-realtime-cli.ts stats",
    "cursor:feedback": "bun run cli/cursor-realtime-cli.ts feedback",
    "cursor:patterns": "bun run cli/cursor-realtime-cli.ts patterns",
    "cursor:test": "bun run cli/cursor-realtime-cli.ts test",
    "bun:dev": "bun --watch cli/cursor-realtime-cli.ts start",
    "bun:test": "bun test",
    "bun:install": "bun install",
    "framework:dev": "bun --watch cli/cursor-realtime-cli.ts start",
    "framework:test": "bun run cursor:test",
    "framework:build": "bun run build:vite",
    "framework:validate": "bun run validate",
    "build:package": "bun scripts/build-package.ts",
    "build:cli": "bun scripts/build-standalone-cli.ts",
    "build:docker": "docker build -t aegis-framework/cli:$(cat VERSION) .",
    "release": "bun scripts/release.ts",
    "release:patch": "bun run release -- patch",
    "release:minor": "bun run release -- minor",
    "release:major": "bun run release -- major",
    "version:sync": "bun scripts/sync-version.ts",
    "package:validate": "bun scripts/validate-package.ts",
    "validate:package-manager": "bun tools/validate-package-manager-consistency.ts",
    "fix:package-manager": "bun tools/fix-package-manager-consistency.ts"
  },
  "dependencies": {
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.62.0",
    "@opentelemetry/exporter-jaeger": "^2.0.1",
    "@opentelemetry/exporter-otlp-http": "^0.26.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.203.0",
    "@opentelemetry/resources": "^2.0.1",
    "@opentelemetry/sdk-node": "^0.203.0",
    "@opentelemetry/sdk-trace-node": "^2.0.1",
    "@opentelemetry/semantic-conventions": "^1.36.0",
    "commander": "^14.0.0",
    "ejs": "^3.1.10",
    "inquirer": "^12.9.0",
    "js-yaml": "^4.1.0",
    "ora": "^8.2.0",
    "yargs": "^18.0.0",
    "zod": "^4.0.15"
  },
  "devDependencies": {
    "@types/ejs": "^3.1.5",
    "@types/jest": "^30.0.0",
    "@types/js-yaml": "^4.0.9",
    "@types/node": "^20.0.0",
    "@vitejs/plugin-react": "^5.0.0",
    "bun": "^1.2.19",
    "jest": "^30.0.5",
    "ts-jest": "^29.4.1",
    "vite": "^7.1.1"
  },
  "keywords": [
    "ai",
    "framework",
    "blueprint",
    "governance",
    "constitutional",
    "self-healing",
    "genai-os",
    "constitutional-ai",
    "ai-governance",
    "genai-operating-system",
    "ai-infrastructure",
    "constitutional-computing",
    "drift-detection",
    "evolution-stories",
    "ai-native-engineering",
    "intelligence-governance",
    "probabilistic-systems",
    "ai-reliability",
    "systematic-ai",
    "production-ai"
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/chavezabelino/aegis-framework.git"
  },
  "homepage": "https://github.com/chavezabelino/aegis-framework#readme",
  "bugs": {
    "url": "https://github.com/chavezabelino/aegis-framework/issues"
  },
  "author": {
    "name": "Aegis Framework Contributors",
    "url": "https://github.com/chavezabelino/aegis-framework/graphs/contributors"
  },
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/chavezabelino"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
