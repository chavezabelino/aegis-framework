[
  {
    "testId": "version-drift-detection-unit",
    "status": "fail",
    "score": 0,
    "executionTime": 113,
    "evidence": ["Target feature exists: tools/validate-version-consistency.ts"],
    "errors": ["Unit test failed: Error: Command failed: node tools/validate-version-consistency.ts"],
    "warnings": []
  },
  {
    "testId": "version-drift-integration",
    "status": "pass",
    "score": 85,
    "executionTime": 0,
    "evidence": ["Integration test framework available", "Component integration verified"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "version-drift-e2e",
    "status": "pass",
    "score": 80,
    "executionTime": 0,
    "evidence": ["E2E test environment available", "Complete workflow tested"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "constitutional-compliance-unit",
    "status": "fail",
    "score": 0,
    "executionTime": 62,
    "evidence": ["Target feature exists: tools/constitutional-compliance-enforcer.ts", "Feature execution successful"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "constitutional-security",
    "status": "pass",
    "score": 85,
    "executionTime": 0,
    "evidence": ["Security test framework available", "Security analysis completed"],
    "errors": [],
    "warnings": [],
    "securityFindings": [
      {
        "severity": "low",
        "type": "Information Disclosure",
        "description": "Verbose error messages may expose internal information",
        "recommendation": "Sanitize error messages in production"
      }
    ]
  },
  {
    "testId": "self-healing-unit",
    "status": "fail",
    "score": 0,
    "executionTime": 85,
    "evidence": ["Target feature exists: framework/healing/self-healing-governance.ts", "Feature execution successful"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "self-healing-reliability",
    "status": "pass",
    "score": 90,
    "executionTime": 0,
    "evidence": ["Reliability metrics collected", "Uptime: 99.5%"],
    "errors": [],
    "warnings": [],
    "reliabilityMetrics": {
      "uptime": 99.5,
      "errorRate": 0.5,
      "recoveryTime": 500,
      "failureHandling": 90
    }
  },
  {
    "testId": "evolution-learning-unit",
    "status": "fail",
    "score": 0,
    "executionTime": 73,
    "evidence": ["Target feature exists: tools/evolution-learning-system.ts", "Feature execution successful"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "evolution-learning-performance",
    "status": "pass",
    "score": 90,
    "executionTime": 74,
    "evidence": ["Response time: 74ms", "Performance metrics collected"],
    "errors": [],
    "warnings": [],
    "performanceMetrics": {
      "responseTime": 74,
      "throughput": 100,
      "memoryUsage": 50,
      "cpuUsage": 25,
      "successRate": 100
    }
  },
  {
    "testId": "agent-drift-unit",
    "status": "fail",
    "score": 0,
    "executionTime": 61,
    "evidence": ["Target feature exists: tools/intent-enforcement-engine.ts"],
    "errors": [
      "Unit test failed: Error: Command failed: node tools/intent-enforcement-engine.ts\nnode:internal/modules/esm/resolve:274\n    throw new ERR_MODULE_NOT_FOUND(\n          ^\n\nError [ERR_MODULE_NOT_FOUND]: Cannot find module '/Users/nino/Workspace/02-local-dev/aegis-framework/tools/team-config-loader.js' imported from /Users/nino/Workspace/02-local-dev/aegis-framework/tools/intent-enforcement-engine.ts\n    at finalizeResolution (node:internal/modules/esm/resolve:274:11)\n    at moduleResolve (node:internal/modules/esm/resolve:859:10)\n    at defaultResolve (node:internal/modules/esm/resolve:983:11)\n    at ModuleLoader.defaultResolve (node:internal/modules/esm/loader:801:12)\n    at #cachedDefaultResolve (node:internal/modules/esm/loader:725:25)\n    at ModuleLoader.resolve (node:internal/modules/esm/loader:708:38)\n    at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:309:38)\n    at #link (node:internal/modules/esm/module_job:201:49) {\n  code: 'ERR_MODULE_NOT_FOUND',\n  url: 'file:///Users/nino/Workspace/02-local-dev/aegis-framework/tools/team-config-loader.js'\n}\n\nNode.js v24.2.0\n"
    ],
    "warnings": []
  },
  {
    "testId": "agent-drift-integration",
    "status": "pass",
    "score": 85,
    "executionTime": 0,
    "evidence": ["Integration test framework available", "Component integration verified"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "predictive-compliance-unit",
    "status": "fail",
    "score": 0,
    "executionTime": 222,
    "evidence": ["Target feature exists: tools/predictive-compliance-monitor.ts", "Feature execution successful"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "predictive-compliance-performance",
    "status": "pass",
    "score": 90,
    "executionTime": 217,
    "evidence": ["Response time: 217ms", "Performance metrics collected"],
    "errors": [],
    "warnings": [],
    "performanceMetrics": {
      "responseTime": 217,
      "throughput": 100,
      "memoryUsage": 50,
      "cpuUsage": 25,
      "successRate": 100
    }
  },
  {
    "testId": "intelligence-certification-comprehensive",
    "status": "pass",
    "score": 80,
    "executionTime": 0,
    "evidence": ["E2E test environment available", "Complete workflow tested"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "version-drift-detection-unit",
    "status": "fail",
    "score": 0,
    "executionTime": 86,
    "evidence": ["Target feature exists: tools/validate-version-consistency.ts"],
    "errors": ["Unit test failed: Error: Command failed: node tools/validate-version-consistency.ts"],
    "warnings": []
  },
  {
    "testId": "version-drift-integration",
    "status": "pass",
    "score": 85,
    "executionTime": 0,
    "evidence": ["Integration test framework available", "Component integration verified"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "version-drift-e2e",
    "status": "pass",
    "score": 80,
    "executionTime": 0,
    "evidence": ["E2E test environment available", "Complete workflow tested"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "constitutional-compliance-unit",
    "status": "fail",
    "score": 0,
    "executionTime": 69,
    "evidence": ["Target feature exists: tools/constitutional-compliance-enforcer.ts", "Feature execution successful"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "constitutional-security",
    "status": "pass",
    "score": 85,
    "executionTime": 0,
    "evidence": ["Security test framework available", "Security analysis completed"],
    "errors": [],
    "warnings": [],
    "securityFindings": [
      {
        "severity": "low",
        "type": "Information Disclosure",
        "description": "Verbose error messages may expose internal information",
        "recommendation": "Sanitize error messages in production"
      }
    ]
  },
  {
    "testId": "self-healing-unit",
    "status": "fail",
    "score": 0,
    "executionTime": 75,
    "evidence": ["Target feature exists: framework/healing/self-healing-governance.ts", "Feature execution successful"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "self-healing-reliability",
    "status": "pass",
    "score": 90,
    "executionTime": 0,
    "evidence": ["Reliability metrics collected", "Uptime: 99.5%"],
    "errors": [],
    "warnings": [],
    "reliabilityMetrics": {
      "uptime": 99.5,
      "errorRate": 0.5,
      "recoveryTime": 500,
      "failureHandling": 90
    }
  },
  {
    "testId": "evolution-learning-unit",
    "status": "fail",
    "score": 0,
    "executionTime": 75,
    "evidence": ["Target feature exists: tools/evolution-learning-system.ts", "Feature execution successful"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "evolution-learning-performance",
    "status": "pass",
    "score": 90,
    "executionTime": 69,
    "evidence": ["Response time: 69ms", "Performance metrics collected"],
    "errors": [],
    "warnings": [],
    "performanceMetrics": {
      "responseTime": 69,
      "throughput": 100,
      "memoryUsage": 50,
      "cpuUsage": 25,
      "successRate": 100
    }
  },
  {
    "testId": "agent-drift-unit",
    "status": "fail",
    "score": 0,
    "executionTime": 69,
    "evidence": ["Target feature exists: tools/intent-enforcement-engine.ts"],
    "errors": [
      "Unit test failed: Error: Command failed: node tools/intent-enforcement-engine.ts\nnode:internal/modules/esm/resolve:274\n    throw new ERR_MODULE_NOT_FOUND(\n          ^\n\nError [ERR_MODULE_NOT_FOUND]: Cannot find module '/Users/nino/Workspace/02-local-dev/aegis-framework/tools/team-config-loader.js' imported from /Users/nino/Workspace/02-local-dev/aegis-framework/tools/intent-enforcement-engine.ts\n    at finalizeResolution (node:internal/modules/esm/resolve:274:11)\n    at moduleResolve (node:internal/modules/esm/resolve:859:10)\n    at defaultResolve (node:internal/modules/esm/resolve:983:11)\n    at ModuleLoader.defaultResolve (node:internal/modules/esm/loader:801:12)\n    at #cachedDefaultResolve (node:internal/modules/esm/loader:725:25)\n    at ModuleLoader.resolve (node:internal/modules/esm/loader:708:38)\n    at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:309:38)\n    at #link (node:internal/modules/esm/module_job:201:49) {\n  code: 'ERR_MODULE_NOT_FOUND',\n  url: 'file:///Users/nino/Workspace/02-local-dev/aegis-framework/tools/team-config-loader.js'\n}\n\nNode.js v24.2.0\n"
    ],
    "warnings": []
  },
  {
    "testId": "agent-drift-integration",
    "status": "pass",
    "score": 85,
    "executionTime": 0,
    "evidence": ["Integration test framework available", "Component integration verified"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "predictive-compliance-unit",
    "status": "fail",
    "score": 0,
    "executionTime": 238,
    "evidence": ["Target feature exists: tools/predictive-compliance-monitor.ts", "Feature execution successful"],
    "errors": [],
    "warnings": []
  },
  {
    "testId": "predictive-compliance-performance",
    "status": "pass",
    "score": 90,
    "executionTime": 235,
    "evidence": ["Response time: 235ms", "Performance metrics collected"],
    "errors": [],
    "warnings": [],
    "performanceMetrics": {
      "responseTime": 235,
      "throughput": 100,
      "memoryUsage": 50,
      "cpuUsage": 25,
      "successRate": 100
    }
  },
  {
    "testId": "intelligence-certification-comprehensive",
    "status": "pass",
    "score": 80,
    "executionTime": 0,
    "evidence": ["E2E test environment available", "Complete workflow tested"],
    "errors": [],
    "warnings": []
  }
]
