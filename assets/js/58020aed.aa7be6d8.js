"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[472],{6716:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"capabilities/integration","title":"Integration Capabilities","description":"Overview","source":"@site/docs/capabilities/integration.md","sourceDirName":"capabilities","slug":"/capabilities/integration","permalink":"/aegis-framework/docs/capabilities/integration","draft":false,"unlisted":false,"editUrl":"https://github.com/chavezabelino/aegis-framework/tree/main/website/docs/capabilities/integration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"capabilitiesSidebar","previous":{"title":"Governance Capabilities","permalink":"/aegis-framework/docs/capabilities/governance"}}');var r=i(4848),s=i(8453);const l={},o="Integration Capabilities",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Key Integration Components",id:"key-integration-components",level:2},{value:"Blueprint Implementations",id:"blueprint-implementations",level:3},{value:"External Connections",id:"external-connections",level:3},{value:"Blueprint System",id:"blueprint-system",level:2},{value:"Available Blueprints",id:"available-blueprints",level:3},{value:"feat-public-viewing",id:"feat-public-viewing",level:4},{value:"memory-governance",id:"memory-governance",level:4},{value:"Blueprint Architecture",id:"blueprint-architecture",level:3},{value:"Tech Stack Adapters",id:"tech-stack-adapters",level:2},{value:"Supported Platforms",id:"supported-platforms",level:3},{value:"Universal Adapter Pattern",id:"universal-adapter-pattern",level:3},{value:"External System Integration",id:"external-system-integration",level:2},{value:"Model Context Protocol (MCP)",id:"model-context-protocol-mcp",level:3},{value:"CI/CD Integration",id:"cicd-integration",level:3},{value:"Future Integration Plans",id:"future-integration-plans",level:2},{value:"Planned Expansions",id:"planned-expansions",level:3},{value:"Integration Principles",id:"integration-principles",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"integration-capabilities",children:"Integration Capabilities"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The Integration category represents ",(0,r.jsx)(n.strong,{children:"2 capabilities (3%)"})," of the framework, providing blueprint implementations and external system connections."]}),"\n",(0,r.jsx)(n.h2,{id:"key-integration-components",children:"Key Integration Components"}),"\n",(0,r.jsx)(n.h3,{id:"blueprint-implementations",children:"Blueprint Implementations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"feat-public-viewing"}),": Example blueprint for public interface features"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"memory-governance"}),": Blueprint for memory subsystem integration"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"external-connections",children:"External Connections"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Adapter Interface"}),": Universal pattern for tech stack integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MCP Integration"}),": Model Context Protocol support for AI agent communication"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"blueprint-system",children:"Blueprint System"}),"\n",(0,r.jsx)(n.h3,{id:"available-blueprints",children:"Available Blueprints"}),"\n",(0,r.jsx)(n.h4,{id:"feat-public-viewing",children:"feat-public-viewing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Demonstrates public-facing feature development patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Status"}),": Active implementation example"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Components"}),": Frontend components, API endpoints, documentation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration"}),": Shows blueprint-to-code generation workflow"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"memory-governance",children:"memory-governance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Memory subsystem constitutional integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Status"}),": v3.0.0 strategic capability"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Architecture"}),": Dual-layer memory (Lite + Heavy) with compliance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Governance"}),": Constitutional memory management patterns"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"blueprint-architecture",children:"Blueprint Architecture"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Example blueprint structure\nname: Feature Blueprint\nversion: 1.0.0\ndescription: Blueprint description\nscope: frontend, backend, documentation\ntasks:\n  - id: generate-component\n    agent: frontend-agent\n    prompt: "Generate React component..."\n    output: src/components/Component.tsx\n'})}),"\n",(0,r.jsx)(n.h2,{id:"tech-stack-adapters",children:"Tech Stack Adapters"}),"\n",(0,r.jsx)(n.h3,{id:"supported-platforms",children:"Supported Platforms"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deno Edge"}),": Edge runtime deployment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Python FastAPI"}),": Backend API development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"React Next.js"}),": Frontend application development"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"universal-adapter-pattern",children:"Universal Adapter Pattern"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consistent Interface"}),": Same blueprint format across all stacks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tech-Specific Output"}),": Generates appropriate code for each platform"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Constitutional Compliance"}),": All adapters respect governance rules"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Observability Integration"}),": Telemetry emission across all platforms"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"external-system-integration",children:"External System Integration"}),"\n",(0,r.jsx)(n.h3,{id:"model-context-protocol-mcp",children:"Model Context Protocol (MCP)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Agent Communication"}),": Standardized AI agent interaction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Context Sharing"}),": Framework state and capability sharing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-time Updates"}),": Live framework status communication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-Agent Coordination"}),": Support for agent collaboration"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"cicd-integration",children:"CI/CD Integration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GitHub Actions"}),": Automated deployment and validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pre-commit Hooks"}),": Real-time compliance checking"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build Pipelines"}),": Framework data generation and validation"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"future-integration-plans",children:"Future Integration Plans"}),"\n",(0,r.jsx)(n.h3,{id:"planned-expansions",children:"Planned Expansions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enterprise Platforms"}),": Integration with enterprise development tools"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cloud Providers"}),": Native cloud platform support"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IDE Extensions"}),": Direct integration with development environments"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Third-party Tools"}),": Plugin architecture for external tool integration"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"integration-principles",children:"Integration Principles"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Constitutional Compliance"}),": All integrations respect framework governance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Observability"}),": Every integration provides telemetry and tracing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Version Compatibility"}),": Semantic versioning across all integrations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"}),": Auto-generated integration documentation"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The integration capabilities ensure the framework can work effectively across diverse technology stacks while maintaining consistent governance and observability."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(6540);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);