name: Aegis Constitutional Governance
on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: governance-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read
  security-events: write

env:
  NODE_VERSION: '20.16.0'
  NPM_CONFIG_AUDIT: "false"
  NPM_CONFIG_FUND: "false"
  NPM_CONFIG_FETCH_RETRIES: "5"
  NPM_CONFIG_FETCH_RETRY_MINTIMEOUT: "20000"
  NPM_CONFIG_FETCH_RETRY_MAXTIMEOUT: "120000"

jobs:
  validate_blueprint:
    name: Validate Blueprints
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps (robust)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          command: |
            if [ -f package-lock.json ]; then
              echo "Lockfile found -> npm ci"
              npm ci --prefer-offline --no-audit --no-fund
            else
              echo "Lockfile missing -> npm install (non-reproducible)"
              npm install --no-audit --no-fund
            fi

      - name: Validate blueprints
        run: |
          if ls blueprints/**/blueprint.yaml >/dev/null 2>&1; then
            npx --yes tsx tools/validate-blueprint.ts blueprints/**/blueprint.yaml --ci
          fi
          if ls patterns/**/blueprint.yaml >/dev/null 2>&1; then
            # non-blocking for patterns
            npx --yes tsx tools/validate-blueprint.ts patterns/**/blueprint.yaml --ci || echo "patterns validation reported issues"
          fi

      - name: Upload blueprint validation results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: blueprint-validation
          path: .aegis/validation/

  check_provenance:
    name: Check Provenance
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps (robust)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          command: |
            if [ -f package-lock.json ]; then
              npm ci --prefer-offline --no-audit --no-fund
            else
              npm install --no-audit --no-fund
            fi

      # Attest only when secret is present (trusted branches)
      - name: Generate attestations (trusted)
        if: ${{ secrets.AEGIS_HMAC_KEY != '' }}
        env:
          AEGIS_HMAC_KEY: ${{ secrets.AEGIS_HMAC_KEY }}
        run: |
          npx --yes tsx tools/attest.ts attest cli
          npx --yes tsx tools/attest.ts attest tools

      - name: Check provenance headers
        run: node tools/check-provenance.js --ci
        # strict on main, relaxed on PR
        continue-on-error: ${{ github.event_name == 'pull_request' }}

      - name: Verify attestations (trusted)
        if: ${{ secrets.AEGIS_HMAC_KEY != '' }}
        env:
          AEGIS_HMAC_KEY: ${{ secrets.AEGIS_HMAC_KEY }}
        run: |
          npx --yes tsx tools/attest.ts verify tools
          npx --yes tsx tools/attest.ts verify cli

      - name: Note missing HMAC key (skipping attestation)
        if: ${{ secrets.AEGIS_HMAC_KEY == '' }}
        run: echo "AEGIS_HMAC_KEY not set; skipping attest/verify (PR/fork mode)."

      - name: Upload attestations
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: attestations
          path: .aegis/attestations/

  check_paths:
    name: Check File Organization
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps (robust)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          command: |
            if [ -f package-lock.json ]; then
              npm ci --prefer-offline --no-audit --no-fund
            else
              npm install --no-audit --no-fund
            fi

      - name: Check file organization
        run: |
          mkdir -p .aegis/validation
          node tools/check-paths.js --json | tee .aegis/validation/path-check.json

      - name: Upload path check results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: path-validation
          path: .aegis/validation/

  check_version:
    name: Check Version Sync
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps (robust)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          command: |
            if [ -f package-lock.json ]; then
              npm ci --prefer-offline --no-audit --no-fund
            else
              npm install --no-audit --no-fund
            fi

      - name: Check version synchronization
        run: node tools/check-version-sync.js --ci

      - name: Upload version check results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: version-validation
          path: .aegis/validation/

  prove_evidence:
    name: Prove Evidence
    runs-on: ubuntu-22.04
    needs: [validate_blueprint, check_provenance]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps (robust)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          command: |
            if [ -f package-lock.json ]; then
              npm ci --prefer-offline --no-audit --no-fund
            else
              npm install --no-audit --no-fund
            fi

      - name: Generate planning outputs
        run: |
          mkdir -p .aegis/outputs
          npx --yes tsx cli/aegis-planning.ts help
          npx --yes tsx cli/aegis-planning.ts auto "Add user authentication" --output .aegis/outputs/auth-plan-strict.json
          npx --yes tsx cli/aegis-planning.ts validate MVP-Fix .aegis/outputs/auth-plan-strict.json 2

      - name: Emit planning event
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p .aegis/telemetry
          ts="$(date -u +%FT%TZ)"
          printf '{"timestamp":"%s","event":"planning.detected","context":"user authentication"}\n' "$ts" >> .aegis/telemetry/planning-events.ndjson

      - name: Plan gate (MVP)
        shell: bash
        env:
          PLAN_GATE_ALLOW_MISSING: ${{ github.event_name == 'pull_request' && 'true' || 'false' }}
        run: |
          node scripts/ci/plan-gate.mjs .aegis/outputs/auth-plan-strict.json

      - name: Prove evidence (PREC)
        shell: bash
        run: |
          node tools/prove-evidence.mjs



      - name: Upload evidence
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: evidence
          path: |
            .aegis/outputs/
            .aegis/telemetry/
            blueprints/*/evidence.json

  vr_tests:
    name: Visual Regression Tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps (robust)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          command: |
            if [ -f package-lock.json ]; then
              npm ci --prefer-offline --no-audit --no-fund
            else
              npm install --no-audit --no-fund
            fi

      - name: Install @playwright/test and Chromium only
        run: |
          npm i -D @playwright/test@^1.46.0
          npx --yes playwright install --with-deps chromium

      - name: Detect VR tests
        id: vr
        run: |
          shopt -s nullglob
          files=(tests/vr/**/*.spec.ts tests/vr/*.spec.ts)
          echo "count=${#files[@]}" >> "$GITHUB_OUTPUT"

      - name: Generate VR baseline (first run)
        if: steps.vr.outputs.count != '0'
        run: npx playwright test --update-snapshots

      - name: Run VR tests
        if: steps.vr.outputs.count != '0'
        run: npx playwright test

      - name: Upload VR results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vr-results
          path: |
            test-results/
            playwright-report/

  governance_report:
    name: Generate Governance Report
    runs-on: ubuntu-22.04
    needs: [validate_blueprint, check_provenance, check_paths, check_version, prove_evidence, vr_tests]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps (robust)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          command: |
            if [ -f package-lock.json ]; then
              npm ci --prefer-offline --no-audit --no-fund
            else
              npm install --no-audit --no-fund
            fi

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: .aegis/artifacts/

      - name: Run governance report generator
        env:
          AEGIS_HMAC_KEY: ${{ secrets.AEGIS_HMAC_KEY }}
        run: |
          npx tsx tools/generate-governance-report.ts --ci || node tools/generate-governance-report.mjs --ci
          cp .aegis/reports/governance-report.local.json .aegis/reports/governance-report.ci.json || true

      - name: Upload governance report
        uses: actions/upload-artifact@v4
        with:
          name: governance-report
          path: .aegis/reports/governance-report.ci.json

  receipts:
    name: Governance receipts
    runs-on: ubuntu-22.04
    needs: [validate_blueprint, check_provenance, check_paths, check_version, prove_evidence, vr_tests]
    if: always()
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Generate governance report (no deps)
        run: node tools/generate-governance-report.mjs --ci || true
      - name: Upload governance report (fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: governance-report-fallback
          path: .aegis/reports/*.json
          if-no-files-found: warn
      - name: Upload evidence outputs (fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: evidence-fallback
          path: .aegis/outputs/**
          if-no-files-found: warn
